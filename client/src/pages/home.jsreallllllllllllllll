
import React, { useState } from 'react';
import { useSelector } from 'react-redux';
import ChercheAchat from '../components/home/ChercheAchat';
import Location from '../components/home/Location';
import LocationVacances from '../components/home/LocationVacances';
import Vente from '../components/home/Vente';
import ChercheLocation from '../components/home/ChercheLocation';
import SearchComponent from '../components/SearchComponent';
import PriceRangeFilter from '../components/ranges/PriceRangeFilter';
import Echange from '../components/home/Echange';
import RangoHabitaciones from '../components/ranges/RangoHabitaciones';
import RangoSuperficie from '../components/ranges/RangoSuperficie';

const Home = ({ showModal, setShowModal }) => {
    const { homePosts } = useSelector(state => state);
    const [filters, setFilters] = useState({
        subCategory: "",
        title: "",
        customInput: "",
        wilaya: "",
        commune: "",
        roomRange: [1, 10],  // Número de habitaciones (min, max)
        surfaceRange: [20, 1000], // Superficie en m² (min, max)
        priceRange: [50000, 10000000] // Precio en moneda local (min, max)
    });
    const [appliedFilters, setAppliedFilters] = useState({
        subCategory: "",
        title: "",
        wilaya: "",
        commune: "",
        roomRange: [1, 10],
        surfaceRange: [20, 1000],
        priceRange: [50000, 10000000]
    });
    const handleChange = (e) => setFilters({ ...filters, [e.target.name]: e.target.value });
    const handleSearch = () => { setAppliedFilters({ ...filters }); setShowModal(false); };
    const handleResetFilters = () => {
        setFilters({
            subCategory: "",
            title: "",
            wilaya: "",
            commune: "",
            roomRange: [1, 10],
            surfaceRange: [20, 1000],
            priceRange: [50000, 10000000]
        });
        setAppliedFilters({
            subCategory: "",
            title: "",
            wilaya: "",
            commune: "",
            roomRange: [1, 10],
            surfaceRange: [20, 1000],
            priceRange: [50000, 10000000]
        });
    };
    return (
        <div className="home-container">
            <Vente filters={appliedFilters} />
            <Location filters={appliedFilters} />
            <Echange filters={appliedFilters} />
            <LocationVacances filters={appliedFilters} />
            <ChercheAchat filters={appliedFilters} />
            <ChercheLocation filters={appliedFilters} />

            {showModal && (
                <div className="modal-busqueda">
                    <div className="modal-content-busqueda">
                        <h2>Buscar Propiedades</h2>
                    <select className='select-busqueda' name="subCategory" onChange={handleChange} value={filters.subCategory}>
                            <option value="">Sub Category</option>
                            {Object.keys({ Vente: [], Location: [], Location_Vacances: [], Echange: [], Cherche_Achat: [], Cherche_Location: [] }).map(cat => (
                                <option key={cat} value={cat}>{cat.replace('_', ' ')}</option>
                            ))}
                            </select> 
                        <div>
                            <select style={{ display: "flex", alignItems: "flex-end" }}
                                name="title" value={filters.title} onChange={handleChange} 
                                className="form-control" required >  <option value="">Sélectionner le Yitre</option>
                                <option value="Appartement">Appartement</option>
                                <option value="Villa">Villa</option>
                                <option value="Local">Local</option>
                                <option value="Terrain">Terrain</option>
                                <option value="Carcasse">Carcasse</option>
                                <option value="Niveau de villa">Niveau de Villa</option>
                                <option value="Terrain Agricole">Terrain Agricole</option>
                                <option value="Immeuble">Immeuble</option>
                                <option value="Duplex">Duplex</option>
                                <option value="Studio">Studio</option>
                                <option value="Hangar">Hangar</option>
                                <option value="Bungalow">Bungalow</option>
                                <option value="Usine">Usine</option>
                                <option value="Autre">Autre</option>
                            </select>
                            <small className='text-danger'>Ce champ est requis</small>
                        </div>
                        {/*   <select name="title" value={filters.title} onChange={handleChange} className="form-control">
                            <option value="">Sélectionner le titre</option>
                            {["Villa", "Niveau de Villa", "Terrain", "Carcasse", "Local", "Immeuble"].includes(filters.title) && (
                                <RangoSuperficie filters={filters} setFilters={setFilters} />
                            )}
                        </select>*/ }

                        {filters.title === "Appartement" && (
                            <div>
                                <RangoHabitaciones   filters={filters} setFilters={setFilters} />
                                <RangoSuperficie filters={filters} setFilters={setFilters} />


                            </div>

                        )}


                        {["Villa", "Niveau de Villa"].includes(filters.title) && (
                            <div>
                                <input
                                    type="number"
                                    placeholder="Nombre d’appartements"
                                    name="customInput"
                                    value={filters.customInput}
                                    onChange={handleChange}
                                />
                                <input
                                    type="number"
                                    placeholder="Superficie en M²"
                                    name="customInput"
                                    value={filters.customInput}
                                    onChange={handleChange}
                                />
                            </div>
                        )}


                        {["Terrain", "Carcasse", "Local"].includes(filters.title) && (
                            <input
                                type="number"
                                placeholder="Superficie en m²"
                                name="customInput"
                                value={filters.customInput}
                                onChange={handleChange}
                            />
                        )}

                        {filters.title === "Immeuble" && (
                            <div>
                                <input
                                    type="number"
                                    placeholder="Décrivez le bien"
                                    name="customInput"
                                    value={filters.customInput}
                                    onChange={handleChange}
                                />
                                <input
                                    type="number"
                                    placeholder="Superficie en m²"
                                    name="customInput"
                                    value={filters.customInput}
                                    onChange={handleChange}
                                />

                            </div>

                        )}





                        <SearchComponent filters={filters} setFilters={setFilters} />
                        <PriceRangeFilter filters={filters} setFilters={setFilters} />

                        <div className="modal-buttons">
                            <button className="search-btn" onClick={handleSearch}>Buscar</button>
                            <button className="reset-btn" onClick={handleResetFilters}>Restaurar Categorías</button>
                            <button className="close-btn" onClick={() => setShowModal(false)}>Cerrar</button>
                        </div>
                    </div>
                </div>
            )}
            {homePosts.loading && <p>Cargando...</p>}
        </div>
    );
};

export default Home;
